/* ----------------------

  LANES grid framework
  ====================

  Default usage
  =============
  <div class="container">
    <div class="row">
      <div class="six columns">
      </div>
      <div class="six columns">
      </div>
    </div>
  </div>

-----------------------*/


* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

// Space between columns

$grid-gutter: 20px !default;


// Max width of container

$grid-max-width: 980px + ($grid-gutter * 2) !default;


// Number of total columns

$grid-columns: 12 !default;


// Breakpoint

$breakpoint-size: 480px !default;


// Columns list

$columns: one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen, eighteen, nineteen, twenty, twenty-one, twenty-two, twenty-three, twenty-four;


// Grid loop mixin

$gutter-percentage: ($grid-gutter / $grid-max-width) * 100%;

@mixin grid-loop {
  @for $i from 0 through $grid-columns {

    @if $i != 0 {
      $column-name: nth($columns,$i);
      .column,
      .columns {
        &.#{$column-name} {
          width: percentage($i/$grid-columns);
        }
      }
    }
  }
}


@mixin offset-loop {
  @for $i from 0 through $grid-columns {
    @if $i != 0 {
      $column-name: nth($columns,$i);
      .column,
      .columns {
        &.offset-by-#{$column-name} {
          margin-left: percentage($i/$grid-columns);
        }
      }

    }
  }
}


/**
* Grid scaffolding
*/

.container {
  max-width: $grid-max-width;
  margin: 0 auto;
  padding: 0 $grid-gutter;
}

.row {
  list-style: none;
  margin-left: -$grid-gutter;
  &:before,
  &:after {
    content: '';
    display: table;
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

.column,
.columns {
  float: left;
  padding-left: $gutter-percentage;
  &.centered {
    float: none;
    clear: both;
    margin-left: auto;
    margin-right: auto;
  }
}


/**
* Columns generator
*/

@include grid-loop;

@include offset-loop;

@media screen and (max-width: $breakpoint-size) {
  @for $i from 0 through $grid-columns {
    @if $i != 0 {
      $column-name: nth($columns,$i);
      .column,
      .columns {
        &.#{$column-name} {
          width: 100%;
          margin-left: 0;
        }

        &.offset-by-#{$column-name} {
          margin-left: 0;
        }
      }
    }
  }
}